{"ast":null,"code":"var _jsxFileName = \"/Users/karthik/dev/milkyway/src/Components/LiveScan.js\";\nimport React, { useState, useRef } from 'react';\nimport Scanner from './Scanner';\nimport Result from './Result';\n\nconst LiveScan = () => {\n  const [scanning, setScanning] = useState(false);\n  const [results, setResults] = useState([]);\n  const scannerRef = useRef(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setScanning(!scanning),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, scanning ? 'Stop' : 'Start'), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, results.map(result => result.codeResult && /*#__PURE__*/React.createElement(Result, {\n    key: result.codeResult.code,\n    result: result,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 64\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    ref: scannerRef,\n    style: {\n      position: 'relative',\n      border: '3px solid red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    className: \"drawingBuffer\",\n    style: {\n      position: 'absolute',\n      top: '0px',\n      // left: '0px',\n      // height: '100%',\n      // width: '100%',\n      border: '3px solid green'\n    },\n    width: \"640\",\n    height: \"480\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }), scanning ? /*#__PURE__*/React.createElement(Scanner, {\n    scannerRef: scannerRef,\n    onDetected: result => setResults([...results, result]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }) : null));\n};\n\nexport default LiveScan;","map":{"version":3,"sources":["/Users/karthik/dev/milkyway/src/Components/LiveScan.js"],"names":["React","useState","useRef","Scanner","Result","LiveScan","scanning","setScanning","results","setResults","scannerRef","map","result","codeResult","code","position","border","top"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMS,UAAU,GAAGR,MAAM,CAAC,IAAD,CAAzB;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAE,MAAMK,WAAW,CAAC,CAACD,QAAF,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDA,QAAQ,GAAG,MAAH,GAAY,OAArE,CADJ,eAEI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,OAAO,CAACG,GAAR,CAAaC,MAAD,IAAaA,MAAM,CAACC,UAAP,iBAAqB,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAED,MAAM,CAACC,UAAP,CAAkBC,IAA/B;AAAqC,IAAA,MAAM,EAAEF,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9C,CADL,CAFJ,eAKI;AAAK,IAAA,GAAG,EAAEF,UAAV;AAAsB,IAAA,KAAK,EAAE;AAACK,MAAAA,QAAQ,EAAE,UAAX;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,KAAK,EAAE;AACrCD,MAAAA,QAAQ,EAAE,UAD2B;AAErCE,MAAAA,GAAG,EAAE,KAFgC;AAGrC;AACA;AACA;AACAD,MAAAA,MAAM,EAAE;AAN6B,KAAzC;AAOG,IAAA,KAAK,EAAC,KAPT;AAOe,IAAA,MAAM,EAAC,KAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUKV,QAAQ,gBAAG,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAEI,UAArB;AAAiC,IAAA,UAAU,EAAGE,MAAD,IAAYH,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaI,MAAb,CAAD,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAmG,IAVhH,CALJ,CADJ;AAoBH,CAzBD;;AA2BA,eAAeP,QAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport Scanner from './Scanner';\nimport Result from './Result';\n\nconst LiveScan = () => {\n    const [scanning, setScanning] = useState(false);\n    const [results, setResults] = useState([]);\n    const scannerRef = useRef(null);\n\n    return (\n        <div>\n            <button onClick={() => setScanning(!scanning) }>{scanning ? 'Stop' : 'Start'}</button>\n            <ul className=\"results\">\n                {results.map((result) => (result.codeResult && <Result key={result.codeResult.code} result={result} />))}\n            </ul>\n            <div ref={scannerRef} style={{position: 'relative', border: '3px solid red'}}>\n                {/* <video style={{ width: window.innerWidth, height: 480, border: '3px solid orange' }}/> */}\n                <canvas className=\"drawingBuffer\" style={{\n                    position: 'absolute',\n                    top: '0px',\n                    // left: '0px',\n                    // height: '100%',\n                    // width: '100%',\n                    border: '3px solid green',\n                }} width=\"640\" height=\"480\" />\n                {scanning ? <Scanner scannerRef={scannerRef} onDetected={(result) => setResults([...results, result])} /> : null}\n            </div>\n        </div>\n    );\n};\n\nexport default LiveScan;"]},"metadata":{},"sourceType":"module"}