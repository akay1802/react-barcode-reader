{"ast":null,"code":"var _jsxFileName = \"/Users/karthik/dev/milkyway/src/App.js\";\nimport React, { useState, useRef } from 'react';\nimport Scanner from './Scanner';\nimport Result from './Result';\nimport Navbar from './Components/Navbar';\nimport FileScan from './Components/FileScan';\nimport { AppProvider } from './AppContext';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTab: 'fileScan',\n      setVal: ({\n        key,\n        value\n      }) => this.setState({\n        [key]: value\n      })\n    };\n  }\n\n  renderTab() {\n    const {\n      currentTab\n    } = this.state;\n\n    switch (currentTab) {\n      case 'fileScan':\n        return /*#__PURE__*/React.createElement(FileScan, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }\n        });\n\n      case 'liveScan':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }\n        }, 'liveScan');\n\n      case 'history':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }\n        }, \"history\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppProvider, {\n      value: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }), this.renderTab()));\n  }\n\n} // const App = () => {\n//     const [scanning, setScanning] = useState(false);\n//     const [results, setResults] = useState([]);\n//     const scannerRef = useRef(null);\n//     return (\n//         <div>\n//             <button onClick={() => setScanning(!scanning) }>{scanning ? 'Stop' : 'Start'}</button>\n//             <ul className=\"results\">\n//                 {results.map((result) => (result.codeResult && <Result key={result.codeResult.code} result={result} />))}\n//             </ul>\n//             <div ref={scannerRef} style={{position: 'relative', border: '3px solid red'}}>\n//                 <video style={{ width: window.innerWidth, height: 480, border: '3px solid orange' }}/>\n//                 <canvas className=\"drawingBuffer\" style={{\n//                     position: 'absolute',\n//                     top: '0px',\n//                     // left: '0px',\n//                     // height: '100%',\n//                     // width: '100%',\n//                     border: '3px solid green',\n//                 }} width=\"640\" height=\"480\" />\n//                 {scanning ? <Scanner scannerRef={scannerRef} onDetected={(result) => setResults([...results, result])} /> : null}\n//             </div>\n//         </div>\n//     );\n// };\n\n\nexport default App;","map":{"version":3,"sources":["/Users/karthik/dev/milkyway/src/App.js"],"names":["React","useState","useRef","Scanner","Result","Navbar","FileScan","AppProvider","App","Component","constructor","props","state","currentTab","setVal","key","value","setState","renderTab","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,UAAU,EAAC,UADJ;AAEPC,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,GAAF;AAAOC,QAAAA;AAAP,OAAD,KAAoB,KAAKC,QAAL,CAAc;AAAE,SAACF,GAAD,GAAOC;AAAT,OAAd;AAFrB,KAAX;AAIH;;AACDE,EAAAA,SAAS,GAAE;AACP,UAAM;AAACL,MAAAA;AAAD,QAAe,KAAKD,KAA1B;;AACA,YAAQC,UAAR;AACI,WAAK,UAAL;AACI,4BAAQ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;;AACJ,WAAK,UAAL;AACI,4BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM,UAAN,CAAR;;AACJ,WAAK,SAAL;AACI,4BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM,SAAN,CAAR;AANR;AAQH;;AACDM,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE,KAAKP,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKM,SAAL,EAFL,CADJ,CADJ;AASH;;AA7B6B,C,CAqClC;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeV,GAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport Scanner from './Scanner';\nimport Result from './Result';\nimport Navbar from './Components/Navbar';\nimport FileScan from './Components/FileScan';\nimport { AppProvider } from './AppContext';\n\nclass App extends React.Component {\n    constructor(props){\n        super(props)\n        this.state={\n            currentTab:'fileScan',\n            setVal: ({ key, value }) => this.setState({ [key]: value })\n        }\n    }\n    renderTab(){\n        const {currentTab} = this.state;\n        switch (currentTab) {\n            case 'fileScan':\n                return (<FileScan/>)\n            case 'liveScan':\n                return (<div>{'liveScan'}</div>)\n            case 'history':\n                return (<div>{\"history\"}</div>)\n        }\n    }\n    render(){\n        return (\n            <div>\n                <AppProvider value={this.state}>\n                    <Navbar />\n                    {this.renderTab()}\n                </AppProvider>\n            </div>\n\n        )\n    }\n    \n\n\n}\n\n\n\n// const App = () => {\n//     const [scanning, setScanning] = useState(false);\n//     const [results, setResults] = useState([]);\n//     const scannerRef = useRef(null);\n\n//     return (\n//         <div>\n\n//             <button onClick={() => setScanning(!scanning) }>{scanning ? 'Stop' : 'Start'}</button>\n//             <ul className=\"results\">\n//                 {results.map((result) => (result.codeResult && <Result key={result.codeResult.code} result={result} />))}\n//             </ul>\n//             <div ref={scannerRef} style={{position: 'relative', border: '3px solid red'}}>\n//                 <video style={{ width: window.innerWidth, height: 480, border: '3px solid orange' }}/>\n//                 <canvas className=\"drawingBuffer\" style={{\n//                     position: 'absolute',\n//                     top: '0px',\n//                     // left: '0px',\n//                     // height: '100%',\n//                     // width: '100%',\n//                     border: '3px solid green',\n//                 }} width=\"640\" height=\"480\" />\n//                 {scanning ? <Scanner scannerRef={scannerRef} onDetected={(result) => setResults([...results, result])} /> : null}\n//             </div>\n//         </div>\n//     );\n// };\n\nexport default App;"]},"metadata":{},"sourceType":"module"}