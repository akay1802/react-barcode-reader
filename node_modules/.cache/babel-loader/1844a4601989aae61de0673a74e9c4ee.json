{"ast":null,"code":"var _jsxFileName = \"/Users/karthik/dev/milkyway/src/Scanner.js\";\nimport React from 'react';\nimport Quagga from 'quagga';\nexport default React.createClass({\n  displayName: \"Scanner\",\n  propTypes: {\n    onDetected: React.PropTypes.func.isRequired\n  },\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"interactive\",\n      className: \"viewport\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    });\n  },\n\n  componentDidMount() {\n    Quagga.init({\n      inputStream: {\n        type: \"LiveStream\",\n        constraints: {\n          width: 640,\n          height: 480,\n          facing: \"environment\" // or user\n\n        }\n      },\n      locator: {\n        patchSize: \"medium\",\n        halfSample: true\n      },\n      numOfWorkers: 2,\n      decoder: {\n        readers: [\"code_128_reader\"]\n      },\n      locate: true\n    }, function (err) {\n      if (err) {\n        return console.log(err);\n      }\n\n      Quagga.start();\n    });\n    Quagga.onDetected(this._onDetected);\n  },\n\n  componentWillUnmount() {\n    Quagga.offDetected(this._onDetected);\n  },\n\n  _onDetected(result) {\n    this.props.onDetected(result);\n  }\n\n});","map":{"version":3,"sources":["/Users/karthik/dev/milkyway/src/Scanner.js"],"names":["React","Quagga","createClass","propTypes","onDetected","PropTypes","func","isRequired","render","componentDidMount","init","inputStream","type","constraints","width","height","facing","locator","patchSize","halfSample","numOfWorkers","decoder","readers","locate","err","console","log","start","_onDetected","componentWillUnmount","offDetected","result","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAeD,KAAK,CAACE,WAAN,CAAkB;AAAA;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,SAAN,CAAgBC,IAAhB,CAAqBC;AAD1B,GADkB;;AAI7BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,SAAS,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAR4B;;AAU7BC,EAAAA,iBAAiB,GAAG;AAChBR,IAAAA,MAAM,CAACS,IAAP,CAAY;AACRC,MAAAA,WAAW,EAAE;AACTC,QAAAA,IAAI,EAAG,YADE;AAETC,QAAAA,WAAW,EAAE;AACTC,UAAAA,KAAK,EAAE,GADE;AAETC,UAAAA,MAAM,EAAE,GAFC;AAGTC,UAAAA,MAAM,EAAE,aAHC,CAGa;;AAHb;AAFJ,OADL;AASRC,MAAAA,OAAO,EAAE;AACLC,QAAAA,SAAS,EAAE,QADN;AAELC,QAAAA,UAAU,EAAE;AAFP,OATD;AAaRC,MAAAA,YAAY,EAAE,CAbN;AAcRC,MAAAA,OAAO,EAAE;AACLC,QAAAA,OAAO,EAAG,CAAE,iBAAF;AADL,OAdD;AAiBRC,MAAAA,MAAM,EAAE;AAjBA,KAAZ,EAkBG,UAASC,GAAT,EAAc;AACb,UAAIA,GAAJ,EAAS;AACL,eAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACH;;AACDvB,MAAAA,MAAM,CAAC0B,KAAP;AACH,KAvBD;AAwBA1B,IAAAA,MAAM,CAACG,UAAP,CAAkB,KAAKwB,WAAvB;AACH,GApC4B;;AAsC7BC,EAAAA,oBAAoB,GAAG;AACnB5B,IAAAA,MAAM,CAAC6B,WAAP,CAAmB,KAAKF,WAAxB;AACH,GAxC4B;;AA0C7BA,EAAAA,WAAW,CAACG,MAAD,EAAS;AAChB,SAAKC,KAAL,CAAW5B,UAAX,CAAsB2B,MAAtB;AACH;;AA5C4B,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport Quagga from 'quagga';\n\nexport default React.createClass({\n    propTypes: {\n        onDetected: React.PropTypes.func.isRequired\n    },\n    render() {\n        return (\n            <div id=\"interactive\" className=\"viewport\"/>\n        );\n    },\n\n    componentDidMount() {\n        Quagga.init({\n            inputStream: {\n                type : \"LiveStream\",\n                constraints: {\n                    width: 640,\n                    height: 480,\n                    facing: \"environment\" // or user\n                }\n            },\n            locator: {\n                patchSize: \"medium\",\n                halfSample: true\n            },\n            numOfWorkers: 2,\n            decoder: {\n                readers : [ \"code_128_reader\"]\n            },\n            locate: true\n        }, function(err) {\n            if (err) {\n                return console.log(err);\n            }\n            Quagga.start();\n        });\n        Quagga.onDetected(this._onDetected);\n    },\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected);\n    },\n\n    _onDetected(result) {\n        this.props.onDetected(result);\n    }\n});"]},"metadata":{},"sourceType":"module"}