{"ast":null,"code":"var _jsxFileName = \"/Users/karthik/dev/milkyway/src/Scanner.js\";\nimport React from 'react';\nimport Quagga from 'quagga';\n\nclass Scanner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"interactive\",\n      className: \"viewport\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    });\n  }\n\n  componentDidMount() {\n    // Quagga.init({\n    //     inputStream: {\n    //         type : \"LiveStream\",\n    //         constraints: {\n    //             width: 640,\n    //             height: 480,\n    //             facing: \"environment\" // or user\n    //         }\n    //     },\n    //     locator: {\n    //         patchSize: \"medium\",\n    //         halfSample: true\n    //     },\n    //     numOfWorkers: 2,\n    //     decoder: {\n    //         readers : [ \"code_128_reader\"]\n    //     },\n    //     locate: true\n    // }, function(err) {\n    //     if (err) {\n    //         return console.log(err);\n    //     }\n    //     Quagga.start();\n    // });\n    Quagga.onDetected(this._onDetected);\n  }\n\n  componentWillUnmount() {\n    Quagga.offDetected(this._onDetected);\n  }\n\n  _onDetected(result) {\n    this.props.onDetected(result);\n  }\n\n}\n\nexport default Scanner;","map":{"version":3,"sources":["/Users/karthik/dev/milkyway/src/Scanner.js"],"names":["React","Quagga","Scanner","Component","constructor","props","state","render","componentDidMount","onDetected","_onDetected","componentWillUnmount","offDetected","result"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AAIH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,SAAS,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAP,IAAAA,MAAM,CAACQ,UAAP,CAAkB,KAAKC,WAAvB;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnBV,IAAAA,MAAM,CAACW,WAAP,CAAmB,KAAKF,WAAxB;AACH;;AAEDA,EAAAA,WAAW,CAACG,MAAD,EAAS;AAChB,SAAKR,KAAL,CAAWI,UAAX,CAAsBI,MAAtB;AACH;;AAjDiC;;AAmDtC,eAAeX,OAAf","sourcesContent":["import React from 'react';\nimport Quagga from 'quagga';\n\nclass Scanner extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n           \n        }\n        \n    };\n    render() {\n        return (\n            <div id=\"interactive\" className=\"viewport\"/>\n        );\n    }\n\n    componentDidMount() {\n        // Quagga.init({\n        //     inputStream: {\n        //         type : \"LiveStream\",\n        //         constraints: {\n        //             width: 640,\n        //             height: 480,\n        //             facing: \"environment\" // or user\n        //         }\n        //     },\n        //     locator: {\n        //         patchSize: \"medium\",\n        //         halfSample: true\n        //     },\n        //     numOfWorkers: 2,\n        //     decoder: {\n        //         readers : [ \"code_128_reader\"]\n        //     },\n        //     locate: true\n        // }, function(err) {\n        //     if (err) {\n        //         return console.log(err);\n        //     }\n        //     Quagga.start();\n        // });\n        Quagga.onDetected(this._onDetected);\n    }\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected);\n    }\n\n    _onDetected(result) {\n        this.props.onDetected(result);\n    }\n}\nexport default Scanner"]},"metadata":{},"sourceType":"module"}