{"ast":null,"code":"var _jsxFileName = \"/Users/karthik/dev/milkyway/src/Components/FileScan.js\";\nimport React from 'react';\nimport { Button, Container, Row, Col, Card, Spinner } from 'react-bootstrap';\nimport AppContext from '../AppContext';\nimport '../App.css';\nimport img from '../noImage.png';\nimport Quagga from '@ericblade/quagga2';\n\nclass FileScan extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.triggerInputFile = this.triggerInputFile.bind(this);\n  }\n\n  highlightBarcode(result) {\n    console.log('barcode', result);\n    const {\n      box = []\n    } = result;\n    const imgEl = document.getElementById(\"uploaded-image\");\n    const cnvs = document.getElementById(\"my-canvas\");\n    cnvs.style.position = \"absolute\";\n    cnvs.style.left = imgEl.offsetLeft + \"px\";\n    cnvs.style.top = imgEl.offsetTop + \"px\";\n    const ctx = cnvs.getContext(\"2d\");\n    ctx.beginPath();\n    let line = box[0];\n    ctx.moveTo(line[0], line[1]);\n    line = box[1];\n    ctx.lineTo(line[0], line[1]);\n    ctx.stroke();\n    ctx.moveTo(line[0], line[1]);\n    line = box[2];\n    ctx.lineTo(line[0], line[1]);\n    ctx.stroke();\n    ctx.moveTo(line[0], line[1]);\n    line = box[3];\n    ctx.lineTo(line[0], line[1]);\n    ctx.stroke();\n    ctx.moveTo(line[0], line[1]);\n    line = box[0];\n    ctx.lineTo(line[0], line[1]);\n    ctx.stroke();\n    ctx.lineWidth = 3;\n    ctx.strokeStyle = '#ff0000';\n    ctx.stroke();\n  }\n\n  async handleChange(event) {\n    const files = event.target.files;\n    const file = files[0];\n    let fileData = await this.toBase64(file);\n    var imgUploaded = new Image();\n    imgUploaded.onload = resizeImage;\n    imgUploaded.src = fileData;\n    const newDataUri = imageToDataUri(this, targetWidth, targetHeight);\n    this.setState({\n      uploadedImage: fileData,\n      isLoading: true\n    });\n    this.scanFileForBarcode(fileData);\n  }\n\n  triggerInputFile() {\n    this.fileInput.click();\n  }\n\n  addToHistory(barcodeObj) {\n    const {\n      history = []\n    } = this.context;\n    history.push(barcodeObj);\n    this.context.setVal({\n      key: 'history',\n      value: history\n    });\n  }\n\n  scanFileForBarcode(fileData) {\n    const self = this;\n    Quagga.decodeSingle({\n      decoder: {\n        readers: [\"code_128_reader\", \"ean_5_reader\", \"upc_reader\", \"ean_reader\", \"ean_8_reader\", \"ean_2_reader\", \"code_39_reader\", \"code_93_reader\"] // List of active readers\n\n      },\n      locate: true,\n      // try to locate the barcode in the image\n      size: 800,\n      src: fileData // or 'data:image/jpg;base64,' + data\n\n    }, function (result) {\n      if (result.codeResult) {\n        self.addToHistory({\n          img: fileData,\n          barcode: result.codeResult.code,\n          barcodeType: result.codeResult.format,\n          time: new Date()\n        });\n        self.highlightBarcode(result);\n        self.setState({\n          barcodeDetected: result.codeResult.code,\n          barcodeType: result.codeResult.format,\n          isLoading: false\n        });\n      } else {\n        self.addToHistory({\n          img: fileData,\n          barcode: \"Not Detected\",\n          time: new Date()\n        });\n        self.setState({\n          isLoading: false\n        });\n      }\n    });\n  }\n\n  toBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n    });\n  }\n\n  render() {\n    const {\n      barcodeDetected = 'No Barcode Detected!!',\n      uploadedImage,\n      isLoading = false,\n      barcodeType\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      style: {\n        marginTop: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        border: '2px solid #000000'\n      },\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, uploadedImage ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"uploaded-image\",\n      src: uploadedImage,\n      height: \"400\",\n      width: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"my-canvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: img,\n      height: \"400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    })), \"Upload a image to scan barcode\")), /*#__PURE__*/React.createElement(Col, {\n      lg: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"15px\",\n        marginLeft: \"0\",\n        marginRight: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"text-center\",\n      border: \"secondary\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: fileInput => this.fileInput = fileInput,\n      type: \"file\",\n      onChange: this.handleChange.bind(this),\n      style: {\n        display: \"none\"\n      },\n      accept: \"image/jpeg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        width: '100%',\n        height: \"130px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.triggerInputFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 41\n      }\n    }, \" Upload File \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 41\n      }\n    }, \"Upload any JPEG image with barcode\")))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"15px\",\n        marginLeft: \"0\",\n        marginRight: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"text-center\",\n      border: \"secondary\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }\n    }, \"Barcode Detected:\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        width: '100%',\n        height: \"130px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 37\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 48\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 42\n      }\n    }, \"Barcode: \", barcodeDetected), barcodeType ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 50\n      }\n    }, \"Barcode Type: \", barcodeType) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 85\n      }\n    })))))))));\n  }\n\n}\n\nFileScan.contextType = AppContext;\nexport default FileScan;","map":{"version":3,"sources":["/Users/karthik/dev/milkyway/src/Components/FileScan.js"],"names":["React","Button","Container","Row","Col","Card","Spinner","AppContext","img","Quagga","FileScan","Component","constructor","props","state","triggerInputFile","bind","highlightBarcode","result","console","log","box","imgEl","document","getElementById","cnvs","style","position","left","offsetLeft","top","offsetTop","ctx","getContext","beginPath","line","moveTo","lineTo","stroke","lineWidth","strokeStyle","handleChange","event","files","target","file","fileData","toBase64","imgUploaded","Image","onload","resizeImage","src","newDataUri","imageToDataUri","targetWidth","targetHeight","setState","uploadedImage","isLoading","scanFileForBarcode","fileInput","click","addToHistory","barcodeObj","history","context","push","setVal","key","value","self","decodeSingle","decoder","readers","locate","size","codeResult","barcode","code","barcodeType","format","time","Date","barcodeDetected","Promise","resolve","reject","reader","FileReader","readAsDataURL","onerror","error","render","marginTop","border","marginLeft","marginRight","width","display","height","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {  Button, Container, Row, Col, Card, Spinner } from 'react-bootstrap'\nimport AppContext from '../AppContext';\nimport '../App.css'\nimport img from '../noImage.png'\nimport Quagga from '@ericblade/quagga2';\n\nclass FileScan extends React.Component {\n    constructor(props){\n        super(props)\n        this.state={\n        }\n        this.triggerInputFile = this.triggerInputFile.bind(this)\n    }\n\n    highlightBarcode(result) {\n        console.log('barcode', result)\n        const { box = [] } = result;\n        const imgEl = document.getElementById(\"uploaded-image\");\n        const cnvs = document.getElementById(\"my-canvas\");\n\n        cnvs.style.position = \"absolute\";\n        cnvs.style.left = imgEl.offsetLeft + \"px\";\n        cnvs.style.top = imgEl.offsetTop + \"px\";\n\n        const ctx = cnvs.getContext(\"2d\");\n        ctx.beginPath();\n\n        let line = box[0];\n        ctx.moveTo(line[0], line[1]);\n\n        line = box[1];\n        ctx.lineTo(line[0], line[1]);\n        ctx.stroke();\n        ctx.moveTo(line[0], line[1]);\n\n        line = box[2];\n        ctx.lineTo(line[0], line[1]);\n        ctx.stroke();\n        ctx.moveTo(line[0], line[1]);\n\n        line = box[3];\n        ctx.lineTo(line[0], line[1]);\n        ctx.stroke();\n        ctx.moveTo(line[0], line[1]);\n\n        line = box[0];\n        ctx.lineTo(line[0], line[1]);\n        ctx.stroke();\n\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = '#ff0000';\n        ctx.stroke();\n    }\n\n    async handleChange(event){\n        const files = event.target.files;\n        const file = files[0];\n        let fileData = await this.toBase64(file);\n        var imgUploaded = new Image;\n        imgUploaded.onload = resizeImage;\n        imgUploaded.src = fileData;\n        const newDataUri = imageToDataUri(this, targetWidth, targetHeight);\n        this.setState({\n            uploadedImage: fileData,\n            isLoading: true\n        })\n        this.scanFileForBarcode(fileData)\n       \n    }\n    triggerInputFile() { \n        this.fileInput.click() \n    }\n    addToHistory(barcodeObj){\n        const { history = [] } = this.context;\n        history.push(barcodeObj)\n        this.context.setVal({ key: 'history', value: history })\n    }\n    scanFileForBarcode(fileData){\n        const self = this;\n        Quagga.decodeSingle({\n            decoder: {\n                readers: [\"code_128_reader\", \"ean_5_reader\",\"upc_reader\",\"ean_reader\",\"ean_8_reader\", \"ean_2_reader\", \"code_39_reader\", \"code_93_reader\"] // List of active readers\n            },\n            locate: true, // try to locate the barcode in the image\n            \n                size: 800,\n            \n            src: fileData // or 'data:image/jpg;base64,' + data\n        }, function(result){\n            if(result.codeResult) {\n                self.addToHistory({\n                    img:fileData,\n                    barcode:result.codeResult.code,\n                    barcodeType: result.codeResult.format,\n                    time: new Date()\n                })\n                self.highlightBarcode(result)\n                self.setState({\n                    barcodeDetected: result.codeResult.code,\n                    barcodeType: result.codeResult.format,\n                    isLoading:false\n                })\n                \n            } else {\n                self.addToHistory({\n                    img:fileData,\n                    barcode:\"Not Detected\",\n                    time: new Date()\n                })\n                self.setState({\n                    isLoading:false \n                })\n            }\n        });\n    }\n    toBase64(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        })\n    }\n    render(){\n        const { barcodeDetected = 'No Barcode Detected!!', uploadedImage, isLoading = false, barcodeType } = this.state;\n        return (\n            <div>\n                <Container style={{marginTop:\"50px\"}}>\n                    <Row lg={6}>\n                        <Col style={{\n                            border: '2px solid #000000'\n                        }} lg={6}>\n                            {uploadedImage?<div><img \n                            id='uploaded-image'\n                            src={uploadedImage}\n                            height=\"400\"\n                            width=\"500\"\n                            >\n                            </img>\n                            <canvas id='my-canvas'></canvas>\n                            </div>\n                            :\n                            <div>\n                            <div>\n                            <img \n                            src={img}\n                            height=\"400\"\n                            >\n                                \n                            </img>\n                            </div>\n                            Upload a image to scan barcode\n                            </div>\n                            }\n                            \n                        </Col>\n                        <Col lg={\"6\"}>\n                            <Row style={{ marginTop: \"15px\", marginLeft: \"0\", marginRight: \"auto\" }}>\n                                <Card className=\"text-center\" border=\"secondary\" style={{ width: '100%', }}>\n                                    <input\n                                        ref={fileInput => this.fileInput = fileInput}\n                                        type=\"file\"\n                                        onChange={this.handleChange.bind(this)}\n                                        style={{ display: \"none\" }}\n                                        accept=\"image/jpeg\"\n                                    />\n                                    <Card.Body style={{ width: '100%', height: \"130px\" }}>\n                                        <Button onClick={this.triggerInputFile}> Upload File </Button>\n                                        <p>Upload any JPEG image with barcode</p>\n                                    </Card.Body>\n\n\n                                </Card>\n\n                            </Row>\n                            <Row style={{ marginTop: \"15px\", marginLeft: \"0\", marginRight: \"auto\" }}>\n                                <Card className=\"text-center\" border=\"secondary\" style={{ width: '100%', }}>\n                                    <Card.Header >\n                                        \n                                        Barcode Detected:\n                                    </Card.Header>\n                                    <Card.Body style={{ width: '100%', height: \"130px\" }}>\n                                    {isLoading?<Spinner animation=\"border\" />:\n                                    <div><p>Barcode: {barcodeDetected}</p>\n                                    {barcodeType?<p>Barcode Type: {barcodeType}</p>:<p/>}</div>}\n                                    </Card.Body>\n                                </Card>\n\n                            </Row>\n\n                        </Col>\n                    </Row>\n                </Container>\n\n            </div>\n\n        )\n    }\n    \n\n\n}\nFileScan.contextType = AppContext;\nexport default FileScan;"]},"metadata":{},"sourceType":"module"}