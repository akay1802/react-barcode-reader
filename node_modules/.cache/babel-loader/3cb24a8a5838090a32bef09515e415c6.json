{"ast":null,"code":"var _jsxFileName = \"/Users/karthik/dev/milkyway/src/Scanner.js\";\nimport React from 'react';\nimport Quagga from '@ericblade/quagga2';\n\nclass Scanner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"interactive\",\n      className: \"viewport\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    });\n  }\n\n  async componentDidMount() {\n    let self = this;\n    Quagga.decodeSingle({\n      decoder: {\n        readers: [\"code_128_reader\", \"ean_5_reader\", \"upc_reader\", \"ean_reader\", \"ean_8_reader\", \"ean_2_reader\", \"code_39_reader\", \"code_93_reader\"] // List of active readers\n\n      },\n      locate: true,\n      // try to locate the barcode in the image\n      size: 800,\n      src: '' // or 'data:image/jpg;base64,' + data\n\n    }, function (result) {\n      if (result.codeResult) {\n        self.props.onDetected(result);\n        console.log(\"result\", result.codeResult.code);\n      } else {\n        console.log(\"not detected\");\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    Quagga.offDetected(this._onDetected);\n  }\n\n  _onDetected(result) {\n    this.props.onDetected(result);\n  }\n\n}\n\nexport default Scanner;","map":{"version":3,"sources":["/Users/karthik/dev/milkyway/src/Scanner.js"],"names":["React","Quagga","Scanner","Component","constructor","props","state","render","componentDidMount","self","decodeSingle","decoder","readers","locate","size","src","result","codeResult","onDetected","console","log","code","componentWillUnmount","offDetected","_onDetected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AAIH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,SAAS,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,QAAMC,iBAAN,GAA0B;AAGtB,QAAIC,IAAI,GAAG,IAAX;AACAR,IAAAA,MAAM,CAACS,YAAP,CAAoB;AAChBC,MAAAA,OAAO,EAAE;AACLC,QAAAA,OAAO,EAAE,CAAC,iBAAD,EAAoB,cAApB,EAAmC,YAAnC,EAAgD,YAAhD,EAA6D,cAA7D,EAA6E,cAA7E,EAA6F,gBAA7F,EAA+G,gBAA/G,CADJ,CACqI;;AADrI,OADO;AAIhBC,MAAAA,MAAM,EAAE,IAJQ;AAIF;AAEVC,MAAAA,IAAI,EAAE,GANM;AAQhBC,MAAAA,GAAG,EAAE,EARW,CAQR;;AARQ,KAApB,EASG,UAASC,MAAT,EAAgB;AACf,UAAGA,MAAM,CAACC,UAAV,EAAsB;AAClBR,QAAAA,IAAI,CAACJ,KAAL,CAAWa,UAAX,CAAsBF,MAAtB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAM,CAACC,UAAP,CAAkBI,IAAxC;AACH,OAHD,MAGO;AACHF,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AACJ,KAhBD;AAkBH;;AAEDE,EAAAA,oBAAoB,GAAG;AACnBrB,IAAAA,MAAM,CAACsB,WAAP,CAAmB,KAAKC,WAAxB;AACH;;AAEDA,EAAAA,WAAW,CAACR,MAAD,EAAS;AAChB,SAAKX,KAAL,CAAWa,UAAX,CAAsBF,MAAtB;AACH;;AA7CiC;;AA+CtC,eAAed,OAAf","sourcesContent":["import React from 'react';\nimport Quagga from '@ericblade/quagga2';\n\nclass Scanner extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n           \n        }\n        \n    };\n    render() {\n        return (\n            <div id=\"interactive\" className=\"viewport\"/>\n        );\n    }\n\n    async componentDidMount() {\n        \n        \n        let self = this;\n        Quagga.decodeSingle({\n            decoder: {\n                readers: [\"code_128_reader\", \"ean_5_reader\",\"upc_reader\",\"ean_reader\",\"ean_8_reader\", \"ean_2_reader\", \"code_39_reader\", \"code_93_reader\"] // List of active readers\n            },\n            locate: true, // try to locate the barcode in the image\n            \n                size: 800,\n            \n            src: '' // or 'data:image/jpg;base64,' + data\n        }, function(result){\n            if(result.codeResult) {\n                self.props.onDetected(result);\n                console.log(\"result\", result.codeResult.code);\n            } else {\n                console.log(\"not detected\");\n            }\n        });\n        \n    }\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected);\n    }\n\n    _onDetected(result) {\n        this.props.onDetected(result);\n    }\n}\nexport default Scanner"]},"metadata":{},"sourceType":"module"}