{"ast":null,"code":"var _jsxFileName = \"/Users/karthik/dev/milkyway/src/Components/History.js\";\nimport React from 'react';\nimport { Button, Container, Row, Col, Card, Spinner } from 'react-bootstrap';\nimport AppContext from '../AppContext';\nimport '../App.css';\n\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderHistory() {\n    const {\n      history = []\n    } = this.context;\n    return history.map(obj => {\n      return /*#__PURE__*/React.createElement(Card, {\n        style: {\n          width: \"\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      }, \"Image Uploaded at \", obj.time.toTimeString()), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: obj.img,\n        height: \"40\",\n        width: \"50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }\n      }, \"Barcode:\", obj.barcode, obj.barcodeType ? 'Barcode: ' + obj.barcodeType : '')))));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, this.renderHistory());\n  }\n\n} // const App = () => {\n//     const [scanning, setScanning] = useState(false);\n//     const [results, setResults] = useState([]);\n//     const scannerRef = useRef(null);\n//     return (\n//         <div>\n//             <button onClick={() => setScanning(!scanning) }>{scanning ? 'Stop' : 'Start'}</button>\n//             <ul className=\"results\">\n//                 {results.map((result) => (result.codeResult && <Result key={result.codeResult.code} result={result} />))}\n//             </ul>\n//             <div ref={scannerRef} style={{position: 'relative', border: '3px solid red'}}>\n//                 <video style={{ width: window.innerWidth, height: 480, border: '3px solid orange' }}/>\n//                 <canvas className=\"drawingBuffer\" style={{\n//                     position: 'absolute',\n//                     top: '0px',\n//                     // left: '0px',\n//                     // height: '100%',\n//                     // width: '100%',\n//                     border: '3px solid green',\n//                 }} width=\"640\" height=\"480\" />\n//                 {scanning ? <Scanner scannerRef={scannerRef} onDetected={(result) => setResults([...results, result])} /> : null}\n//             </div>\n//         </div>\n//     );\n// };\n\n\nHistory.contextType = AppContext;\nexport default History;","map":{"version":3,"sources":["/Users/karthik/dev/milkyway/src/Components/History.js"],"names":["React","Button","Container","Row","Col","Card","Spinner","AppContext","History","Component","constructor","props","state","renderHistory","history","context","map","obj","width","time","toTimeString","img","barcode","barcodeType","render","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,MAAV,EAAkBC,SAAlB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCC,IAAvC,EAA6CC,OAA7C,QAA4D,iBAA5D;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,YAAP;;AAEA,MAAMC,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW,EAAX;AAEH;;AACDC,EAAAA,aAAa,GAAE;AACX,UAAM;AAAEC,MAAAA,OAAO,GAAG;AAAZ,QAAmB,KAAKC,OAA9B;AACA,WAAOD,OAAO,CAACE,GAAR,CAAaC,GAAD,IAAO;AACtB,0BACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACuBD,GAAG,CAACE,IAAJ,CAASC,YAAT,EADvB,CADJ,eAII,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AACA,QAAA,GAAG,EAAEH,GAAG,CAACI,GADT;AAEA,QAAA,MAAM,EAAC,IAFP;AAGA,QAAA,KAAK,EAAC,IAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,eAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaJ,GAAG,CAACK,OADjB,EAEKL,GAAG,CAACM,WAAJ,GAAkB,cAAcN,GAAG,CAACM,WAApC,GAAkD,EAFvD,CAVJ,CADJ,CADJ,CAJJ,CADJ;AA0BH,KA3BM,CAAP;AA4BH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKX,aAAL,EADJ,CADJ;AAMH;;AA7CiC,C,CAqDtC;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAL,OAAO,CAACiB,WAAR,GAAsBlB,UAAtB;AACA,eAAeC,OAAf","sourcesContent":["import React from 'react';\nimport {  Button, Container, Row, Col, Card, Spinner } from 'react-bootstrap'\nimport AppContext from '../AppContext';\nimport '../App.css'\n\nclass History extends React.Component {\n    constructor(props){\n        super(props)\n        this.state={\n        }\n    }\n    renderHistory(){\n        const { history = [] } = this.context;\n        return history.map((obj)=>{\n            return(\n                <Card style={{width:\"\"}}>\n                    <Card.Header>\n                        Image Uploaded at {obj.time.toTimeString()}\n                    </Card.Header>\n                    <Card.Body>\n                        <Container>\n                            <Row>\n                                <Col>\n                                <img\n                                src={obj.img}\n                                height=\"40\"\n                                width=\"50\"\n                                >\n                                </img>\n                                </Col>\n                                <hr/>\n                                <Col>\n                                    Barcode:{obj.barcode}\n                                    {obj.barcodeType ? 'Barcode: ' + obj.barcodeType : ''}\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Card.Body>\n                </Card>\n            )\n        })\n    }\n    \n    render(){\n        return (\n            <div>\n               {this.renderHistory()} \n            </div>\n\n        )\n    }\n    \n\n\n}\n\n\n\n// const App = () => {\n//     const [scanning, setScanning] = useState(false);\n//     const [results, setResults] = useState([]);\n//     const scannerRef = useRef(null);\n\n//     return (\n//         <div>\n\n//             <button onClick={() => setScanning(!scanning) }>{scanning ? 'Stop' : 'Start'}</button>\n//             <ul className=\"results\">\n//                 {results.map((result) => (result.codeResult && <Result key={result.codeResult.code} result={result} />))}\n//             </ul>\n//             <div ref={scannerRef} style={{position: 'relative', border: '3px solid red'}}>\n//                 <video style={{ width: window.innerWidth, height: 480, border: '3px solid orange' }}/>\n//                 <canvas className=\"drawingBuffer\" style={{\n//                     position: 'absolute',\n//                     top: '0px',\n//                     // left: '0px',\n//                     // height: '100%',\n//                     // width: '100%',\n//                     border: '3px solid green',\n//                 }} width=\"640\" height=\"480\" />\n//                 {scanning ? <Scanner scannerRef={scannerRef} onDetected={(result) => setResults([...results, result])} /> : null}\n//             </div>\n//         </div>\n//     );\n// };\nHistory.contextType = AppContext;\nexport default History;"]},"metadata":{},"sourceType":"module"}