{"ast":null,"code":"var _jsxFileName = \"/Users/karthik/dev/milkyway/src/Components/FileScan.js\";\nimport React from 'react';\nimport { Button, Container, Row, Col, Card } from 'react-bootstrap';\nimport AppContext from '../AppContext';\nimport '../App.css';\nimport img from '../noImage.png';\nimport Quagga from '@ericblade/quagga2';\n\nclass FileScan extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.triggerInputFile = this.triggerInputFile.bind(this);\n  }\n\n  async handleChange(event) {\n    const files = event.target.files;\n    const file = files[0];\n    let fileData = await this.toBase64(file);\n    this.setState({\n      uploadedImage: fileData\n    });\n  }\n\n  triggerInputFile() {\n    this.fileInput.click();\n  }\n\n  scanFileForBarcode(fileData) {\n    const self = this;\n    Quagga.decodeSingle({\n      decoder: {\n        readers: [\"code_128_reader\", \"ean_5_reader\", \"upc_reader\", \"ean_reader\", \"ean_8_reader\", \"ean_2_reader\", \"code_39_reader\", \"code_93_reader\"] // List of active readers\n\n      },\n      locate: true,\n      // try to locate the barcode in the image\n      size: 800,\n      src: fileData // or 'data:image/jpg;base64,' + data\n\n    }, function (result) {\n      if (result.codeResult) {\n        self.setState({\n          barcodeDetected: result.codeResult.code\n        });\n        console.log(\"result\");\n      } else {\n        console.log(\"not detected\");\n      }\n    });\n  }\n\n  toBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n    });\n  }\n\n  render() {\n    const {\n      barcodeDetected = 'No Barcode Detected!!',\n      uploadedImage\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      style: {\n        marginTop: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        border: '2px solid #000000'\n      },\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, uploadedImage ? /*#__PURE__*/React.createElement(\"img\", {\n      src: uploadedImage,\n      height: \"400\",\n      width: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 44\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: img,\n      height: \"400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    })), \"Upload a image to scan barcode\")), /*#__PURE__*/React.createElement(Col, {\n      lg: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"15px\",\n        marginLeft: \"0\",\n        marginRight: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"text-center\",\n      border: \"secondary\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: fileInput => this.fileInput = fileInput,\n      type: \"file\",\n      onChange: this.handleChange.bind(this),\n      style: {\n        display: \"none\"\n      },\n      accept: \"image/jpeg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        width: '100%',\n        height: \"130px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.triggerInputFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    }, \" Upload File \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 41\n      }\n    }, \"Upload any JPEG image with barcode\")))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"15px\",\n        marginLeft: \"0\",\n        marginRight: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"text-center\",\n      border: \"secondary\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, \"Barcode Detected:\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        width: '100%',\n        height: \"130px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }\n    }, isLoading(), /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }, barcodeDetected))))))));\n  }\n\n}\n\nFileScan.contextType = AppContext;\nexport default FileScan;","map":{"version":3,"sources":["/Users/karthik/dev/milkyway/src/Components/FileScan.js"],"names":["React","Button","Container","Row","Col","Card","AppContext","img","Quagga","FileScan","Component","constructor","props","state","triggerInputFile","bind","handleChange","event","files","target","file","fileData","toBase64","setState","uploadedImage","fileInput","click","scanFileForBarcode","self","decodeSingle","decoder","readers","locate","size","src","result","codeResult","barcodeDetected","code","console","log","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","render","marginTop","border","marginLeft","marginRight","width","display","height","isLoading","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {  Button, Container, Row, Col, Card } from 'react-bootstrap'\nimport AppContext from '../AppContext';\nimport '../App.css'\nimport img from '../noImage.png'\nimport Quagga from '@ericblade/quagga2';\n\nclass FileScan extends React.Component {\n    constructor(props){\n        super(props)\n        this.state={\n        }\n        this.triggerInputFile = this.triggerInputFile.bind(this)\n    }\n    async handleChange(event){\n        const files = event.target.files;\n        const file = files[0];\n        let fileData = await this.toBase64(file);\n        this.setState({\n            uploadedImage:fileData\n        })\n        \n    }\n    triggerInputFile() { \n        this.fileInput.click() \n    }\n    scanFileForBarcode(fileData){\n        const self = this;\n        Quagga.decodeSingle({\n            decoder: {\n                readers: [\"code_128_reader\", \"ean_5_reader\",\"upc_reader\",\"ean_reader\",\"ean_8_reader\", \"ean_2_reader\", \"code_39_reader\", \"code_93_reader\"] // List of active readers\n            },\n            locate: true, // try to locate the barcode in the image\n            \n                size: 800,\n            \n            src: fileData // or 'data:image/jpg;base64,' + data\n        }, function(result){\n            if(result.codeResult) {\n                self.setState({ barcodeDetected: result.codeResult.code })\n                console.log(\"result\", );\n            } else {\n                console.log(\"not detected\");\n            }\n        });\n    }\n    toBase64(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        })\n    }\n    render(){\n        const { barcodeDetected = 'No Barcode Detected!!', uploadedImage } = this.state;\n        return (\n            <div>\n                <Container style={{marginTop:\"50px\"}}>\n                    <Row lg={6}>\n                        <Col style={{\n                            border: '2px solid #000000'\n                        }} lg={6}>\n                            {uploadedImage?<img \n                            src={uploadedImage}\n                            height=\"400\"\n                            width=\"500\"\n                            >\n                            </img>:\n                            <div>\n                            <div>\n                            <img \n                            src={img}\n                            height=\"400\"\n                            >\n                            </img>\n                            </div>\n                            Upload a image to scan barcode\n                            </div>\n                            }\n                            \n                        </Col>\n                        <Col lg={\"6\"}>\n                            <Row style={{ marginTop: \"15px\", marginLeft: \"0\", marginRight: \"auto\" }}>\n                                <Card className=\"text-center\" border=\"secondary\" style={{ width: '100%', }}>\n                                    <input\n                                        ref={fileInput => this.fileInput = fileInput}\n                                        type=\"file\"\n                                        onChange={this.handleChange.bind(this)}\n                                        style={{ display: \"none\" }}\n                                        accept=\"image/jpeg\"\n                                    />\n                                    <Card.Body style={{ width: '100%', height: \"130px\" }}>\n                                        <Button onClick={this.triggerInputFile}> Upload File </Button>\n                                        <p>Upload any JPEG image with barcode</p>\n                                    </Card.Body>\n\n\n                                </Card>\n\n                            </Row>\n                            <Row style={{ marginTop: \"15px\", marginLeft: \"0\", marginRight: \"auto\" }}>\n                                <Card className=\"text-center\" border=\"secondary\" style={{ width: '100%', }}>\n                                    <Card.Header >\n                                        \n                                        Barcode Detected:\n                                    </Card.Header>\n                                    <Card.Body style={{ width: '100%', height: \"130px\" }}>\n                                    \n                                    {isLoading()}<Spinner animation=\"border\" />\n                                        <p>{barcodeDetected}</p>\n                                    </Card.Body>\n                                </Card>\n\n                            </Row>\n\n                        </Col>\n                    </Row>\n                </Container>\n\n            </div>\n\n        )\n    }\n    \n\n\n}\nFileScan.contextType = AppContext;\nexport default FileScan;"]},"metadata":{},"sourceType":"module"}